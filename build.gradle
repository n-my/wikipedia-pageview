buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'scala'
    id 'com.github.alisiikh.scalastyle' version '3.4.0'
    id 'com.github.maiflai.scalatest' version '0.26'
    id 'org.scoverage' version '4.0.1'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

scalastyle {
    scalaVersion = '2.11'
    failOnWarning = false
    verbose = false
    quiet = false
}

dependencies {
    def scalaVersion = '2.11'
    def scalaVersionMinor = '12'
    def awsVersion = '1.11.105'
    def sparkVersion = '2.4.5'
    def hadoopVersion = '2.8.5'
    compile "org.apache.spark:spark-core_$scalaVersion:$sparkVersion"
    compile "org.apache.spark:spark-sql_$scalaVersion:$sparkVersion"
    compile "org.apache.spark:spark-streaming_$scalaVersion:$sparkVersion"
    compile "org.scala-lang:scala-library:$scalaVersion.$scalaVersionMinor"
    compile "org.apache.hadoop:hadoop-aws:$hadoopVersion"
    compile "com.amazonaws:aws-java-sdk:$awsVersion"
    compile "com.github.scopt:scopt_$scalaVersion:3.7.1"

    testCompile "org.scalatest:scalatest_$scalaVersion:3.0.1"
    testCompile "org.scalamock:scalamock_$scalaVersion:4.4.0"
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

jar {
    zip64 = true
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}
